{"version":3,"sources":["images/wreath.png","components/MeshCreation.js","components/SnowEffect.js","images/advent_background.png","sounds/test.mp3","sounds/test2.mp3","sounds/test3.mp3","sounds/cheering.mp3","components/Calendar3D.js","images/modal_decor.png","components/SettingsModal.js","App.js","reportWebVitals.js","index.js"],"names":["CALENDAR_WIDTH","CALENDAR_HEIGHT","BASE_WIDTH","BASE_HEIGHT","OUTLINE_L_MARGIN","OUTLINE_B_MARGIN","fold_width","stagger_val","createDoorMesh","i","geom","THREE","vertices","push","faces","fp","fold_triangle_width_fraction","createDoorOutline","row","col","texture","doorOutlinePointsTop","doorOutlinePointsBottom","number_of_folds","l","uv_array","uv_x","uv_y","vertex_id","face","stagger","offset_position_x","offset_position_y","face_id","length","a","x","y","b","c","faceVertexUvs","material_outline","map","wireframe","side","mesh_outline","position","set","doorOutlinePoints","concat","reverse","doorOutlineGeom","setFromPoints","doorOutlineMaterial","color","line","createDoor","texture_front","geometry","computeFaceNormals","computeVertexNormals","uvsNeedUpdate","bufferGeometry","fromGeometry","attributes","vertex","skinIndices","skinWeights","count","fromBufferAttribute","skinIndex","Math","floor","setAttribute","material_front","skinning","material_back","meshFront","meshBack","skeleton","bones","bone","prevBone","add","tab_width_fraction","createDoorSkeleton","rootBone","bind","maxRange","minRange","pointGeometry","random","z","particle","pointMaterial","size","vertexColors","canvas","document","createElement","ctx","getContext","width","height","canvasRadius","canvasW","canvasH","save","gradient","createRadialGradient","addColorStop","fillStyle","fillRect","restore","drawRadialGradation","diameter","type","needsUpdate","getTexture","transparent","fog","depthWrite","velocities","snowEffectParticles","Calendar3D","props","state","play","update","this","front_texture","load","advent_background","doorStates","k","open","isMoving","panelSound","masterValue","loadSound","src","sound","style","display","body","appendChild","cardboardSound1","sound1","cardboardSound2","sound2","cardboardSound3","sound3","cardboardSound4","sound4","cardboardSound5","sound5","cheerSound","sound_cheer","renderer","alpha","autoClearColor","setSize","window","innerWidth","innerHeight","domElement","scene","camera","controls","OrbitControls","minDistance","maxDistance","keys","LEFT","UP","RIGHT","BOTTOM","minPolarAngle","PI","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","minPan","maxPan","addEventListener","v","copy","target","clamp","sub","frontPanel","j","door_points_lists","HEIGHT","positions","positions_array","triangles","Delaunator","from","triangle","add_face","door_points","includes","material","createAdventFrontPanel","doorArrays","doorsAndOutlineArray","doorArrayFront","doorArrayBack","doorPositions","door","door_id","children","helper","door_outline","testDragGeom","testDragMat","visible","testDragMesh","testDragPanel","setPixelRatio","devicePixelRatio","aspect","updateProjectionMatrix","raycaster","checkMouseIntersection","event","intersects","mouse","clientX","clientY","touches","currentDoor","currentDoor_initialx","currentDoor_initialMasterValue","anyDoorMoving","setFromCamera","intersectObjects","object","initialDoorMasterValue","drag_intersect","enableRotate","point","openDoor","endOpenDoor","time","abs","TWEEN","to","easing","Sinusoidal","Out","onUpdate","adjustDoorAngle","onComplete","start","removeEventListener","initial_x","initial_door","min","max","pause","currentTime","console","log","adjustDoorBoneAngle","value","rotation","getSliderValue","frac","outcome","sliderObj","indexUpper","findIndex","indexLower","fraction","isMouseDragging","isCameraPosMoving","isCameraRotMoving","isDragging","stopDragCheck","stopWheelZoom","e","preventDefault","moveToDoor","target_pos","target_controls","enabled","Quadratic","In","animate","timeStamp","requestAnimationFrame","particles","posArr","velArr","forEach","velocity","velX","sin","velZ","cos","verticesNeedUpdate","updateSnowEffectParticles","render","setState","id","ref","React","Component","SettingsModal","show","Button","variant","onClick","pauseAnimation","buttonStyle","Modal","onHide","playAnimation","dialogClassName","aria-labelledby","decor","alt","Header","closeButton","Title","Body","App","className","wreath","top","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f1fb0264.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/wreath.9030f228.png\";","import * as THREE from 'three';\r\nimport Delaunator from 'delaunator'; \r\n\r\nconst CALENDAR_WIDTH = 13\r\nconst CALENDAR_HEIGHT = 22\r\n\r\nconst number_of_folds = 5\r\nconst fold_height_fraction = 0.03\r\nconst fold_triangle_width_fraction = 0.15\r\n\r\nconst tab_height_fraction = 0.3\r\nconst tab_width_fraction = 0.1\r\nconst tab_triangle_fraction = 0.1\r\n\r\nconst BASE_WIDTH = 1.5\r\nconst BASE_HEIGHT = 1.5\r\n// tabs spill over base width and height\r\n\r\nconst OUTLINE_L_MARGIN = 0.25\r\nconst OUTLINE_T_MARGIN = 0.25\r\nconst OUTLINE_R_MARGIN = 0.25\r\nconst OUTLINE_B_MARGIN = 0.25\r\n\r\nconst fold_width = BASE_WIDTH / number_of_folds\r\n\r\nconst stagger_val = -0.7\r\n\r\nfunction createDoorMesh() {\r\n\r\n\tvar geom = new THREE.Geometry();\r\n\tvar i\r\n\t// base folds\r\n\tfor (i = 0; i < number_of_folds; i++) {\r\n\t\tif (i === 0) {\r\n\t\t\tgeom.vertices.push(new THREE.Vector3( i*fold_width, 0, 0 ))\r\n\t\t\tgeom.vertices.push(new THREE.Vector3( i*fold_width, BASE_HEIGHT, 0 ))\r\n\t\t}\r\n\t\tgeom.vertices.push(new THREE.Vector3( (i+1)*fold_width, 0, 0 ))\r\n\t\tgeom.vertices.push(new THREE.Vector3( (i+1)*fold_width, BASE_HEIGHT, 0 ))\r\n\t\t\r\n\t\tgeom.faces.push(new THREE.Face3( 2*i, 2*i + 1, 2*i + 3 ))\r\n\t\tgeom.faces.push(new THREE.Face3( 2*i, 2*i + 3, 2*i + 2 ))\r\n\t}\r\n\t\r\n\t// number of points previously created\r\n\tvar fp = 2 + 2*number_of_folds\r\n\t\r\n\t// tab mesh\r\n\t\r\n\tgeom.vertices.push(new THREE.Vector3( BASE_WIDTH, BASE_HEIGHT/2 - tab_height_fraction*BASE_HEIGHT/2, 0 ))\r\n\tgeom.vertices.push(new THREE.Vector3( BASE_WIDTH, BASE_HEIGHT/2 + tab_height_fraction*BASE_HEIGHT/2, 0 ))\r\n\tgeom.vertices.push(new THREE.Vector3( BASE_WIDTH + tab_width_fraction*BASE_WIDTH, BASE_HEIGHT/2 - tab_height_fraction*BASE_HEIGHT/2, 0 ))\r\n\tgeom.vertices.push(new THREE.Vector3( BASE_WIDTH + tab_width_fraction*BASE_WIDTH, BASE_HEIGHT/2 + tab_height_fraction*BASE_HEIGHT/2, 0 ))\r\n\tgeom.vertices.push(new THREE.Vector3( BASE_WIDTH, BASE_HEIGHT/2 - (tab_height_fraction*BASE_HEIGHT/2 + tab_triangle_fraction*BASE_HEIGHT), 0 ))\r\n\tgeom.vertices.push(new THREE.Vector3( BASE_WIDTH, BASE_HEIGHT/2 + (tab_height_fraction*BASE_HEIGHT/2 + tab_triangle_fraction*BASE_HEIGHT), 0 ))\r\n\t\r\n\tgeom.faces.push(new THREE.Face3( fp, fp + 1, fp + 3 ))\r\n\tgeom.faces.push(new THREE.Face3( fp, fp + 3, fp + 2 ))\r\n\tgeom.faces.push(new THREE.Face3( fp + 1, fp + 5, fp + 3 ))\r\n\tgeom.faces.push(new THREE.Face3( fp, fp + 2, fp + 4 ))\r\n\t\r\n\t// update number of points created\r\n\tfp = 2 + 2*number_of_folds + 6\r\n\t\r\n\t// fold detail (spillover)\r\n\tfor (i = 0; i < number_of_folds; i++) {\r\n\t\tgeom.vertices.push(new THREE.Vector3( i*fold_width, BASE_HEIGHT+(fold_height_fraction*BASE_HEIGHT), 0 ))\r\n\t\tgeom.vertices.push(new THREE.Vector3( ((i+1)*fold_width) - (fold_triangle_width_fraction*fold_width), BASE_HEIGHT+(fold_height_fraction*BASE_HEIGHT), 0 ))\r\n\t\tgeom.vertices.push(new THREE.Vector3( ((i+1)*fold_width) - (fold_triangle_width_fraction*fold_width), BASE_HEIGHT, 0 ))\r\n\t\t\r\n\t\tgeom.faces.push(new THREE.Face3( 2*i+1, fp+6*i, fp+6*i+2 ))\r\n\t\tgeom.faces.push(new THREE.Face3( fp+6*i, fp+6*i+1, fp+6*i+2 ))\r\n\t\tgeom.faces.push(new THREE.Face3( fp+6*i+1, 2*i+3, fp+6*i+2 ))\r\n\t\t\r\n\t\tgeom.vertices.push(new THREE.Vector3( i*fold_width, 0-(fold_height_fraction*BASE_HEIGHT), 0 ))\r\n\t\tgeom.vertices.push(new THREE.Vector3( ((i+1)*fold_width) - (fold_triangle_width_fraction*fold_width), 0-(fold_height_fraction*BASE_HEIGHT), 0 ))\r\n\t\tgeom.vertices.push(new THREE.Vector3( ((i+1)*fold_width) - (fold_triangle_width_fraction*fold_width), 0, 0 ))\r\n\t\t\r\n\t\tgeom.faces.push(new THREE.Face3( 2*i+1, fp+6*i+5, fp+6*i+3 ))\r\n\t\tgeom.faces.push(new THREE.Face3( fp+6*i+5, fp+6*i+4, fp+6*i+3 ))\r\n\t\tgeom.faces.push(new THREE.Face3( fp+6*i+5, 2*i+2, fp+6*i+4 ))\r\n\t}\r\n\t\r\n\treturn(geom)\r\n}\r\n\r\nfunction createDoorOutline(row, col, texture) {\r\n\tvar geom = new THREE.Geometry();\r\n\tvar doorOutlinePointsTop = []\r\n\tvar doorOutlinePointsBottom = []\r\n\t\r\n\tgeom.vertices.push(new THREE.Vector3( 0-OUTLINE_L_MARGIN, 0-OUTLINE_B_MARGIN, 0 ))\r\n\tgeom.vertices.push(new THREE.Vector3( 0-OUTLINE_L_MARGIN, BASE_HEIGHT+OUTLINE_T_MARGIN, 0 ))\r\n\tgeom.vertices.push(new THREE.Vector3( 0, 0-OUTLINE_B_MARGIN, 0 ))\r\n\tgeom.vertices.push(new THREE.Vector3( 0, BASE_HEIGHT+OUTLINE_T_MARGIN, 0 ))\r\n\t\r\n\tgeom.faces.push(new THREE.Face3( 0, 1, 3 ))\r\n\tgeom.faces.push(new THREE.Face3( 0, 3, 2 ))\r\n\t\r\n\tgeom.vertices.push(new THREE.Vector3( 0, 0-(fold_height_fraction*BASE_HEIGHT), 0 ))\r\n\tgeom.vertices.push(new THREE.Vector3( 0, BASE_HEIGHT+(fold_height_fraction*BASE_HEIGHT), 0 ))\r\n\tvar fp = 6\r\n\t\r\n\tdoorOutlinePointsBottom.push(new THREE.Vector3( 0, 0-(fold_height_fraction*BASE_HEIGHT), 0 ))\r\n\tdoorOutlinePointsTop.push(new THREE.Vector3( 0, BASE_HEIGHT+(fold_height_fraction*BASE_HEIGHT), 0 ))\r\n\t\r\n\r\n\tfor (var i = 0; i < number_of_folds; i++) {\r\n\t\t\r\n\t\tgeom.vertices.push(new THREE.Vector3( ((i+1)*fold_width) - (fold_triangle_width_fraction*fold_width), 0-OUTLINE_B_MARGIN, 0 ))\r\n\t\tgeom.vertices.push(new THREE.Vector3( ((i+1)*fold_width) - (fold_triangle_width_fraction*fold_width), 0-(fold_height_fraction*BASE_HEIGHT), 0 ))\r\n\t\tgeom.vertices.push(new THREE.Vector3( ((i+1)*fold_width), 0, 0 ))\r\n\t\t\r\n\t\tdoorOutlinePointsBottom.push(new THREE.Vector3( ((i+1)*fold_width) - (fold_triangle_width_fraction*fold_width), 0-(fold_height_fraction*BASE_HEIGHT), 0 ))\r\n\t\tdoorOutlinePointsBottom.push(new THREE.Vector3( ((i+1)*fold_width), 0, 0 ))\r\n\t\t\r\n\t\tgeom.vertices.push(new THREE.Vector3( ((i+1)*fold_width) - (fold_triangle_width_fraction*fold_width), BASE_HEIGHT+OUTLINE_T_MARGIN, 0 ))\r\n\t\tgeom.vertices.push(new THREE.Vector3( ((i+1)*fold_width) - (fold_triangle_width_fraction*fold_width), BASE_HEIGHT+(fold_height_fraction*BASE_HEIGHT), 0 ))\r\n\t\tgeom.vertices.push(new THREE.Vector3( ((i+1)*fold_width), BASE_HEIGHT, 0 ))\r\n\t\t\r\n\t\tdoorOutlinePointsTop.push(new THREE.Vector3( ((i+1)*fold_width) - (fold_triangle_width_fraction*fold_width), BASE_HEIGHT+(fold_height_fraction*BASE_HEIGHT), 0 ))\r\n\t\tdoorOutlinePointsTop.push(new THREE.Vector3( ((i+1)*fold_width), BASE_HEIGHT, 0 ))\r\n\r\n\t\tgeom.vertices.push(new THREE.Vector3( ((i+1)*fold_width), 0-OUTLINE_B_MARGIN, 0 ))\r\n\t\tgeom.vertices.push(new THREE.Vector3( ((i+1)*fold_width), BASE_HEIGHT+OUTLINE_T_MARGIN, 0 ))\r\n\t\t\r\n\t\tgeom.vertices.push(new THREE.Vector3( ((i+1)*fold_width), 0-(fold_height_fraction*BASE_HEIGHT), 0 ))\r\n\t\tgeom.vertices.push(new THREE.Vector3( ((i+1)*fold_width), BASE_HEIGHT+(fold_height_fraction*BASE_HEIGHT), 0 ))\r\n\t\t\r\n\t\tif (i < number_of_folds-1) {\r\n\t\t\tdoorOutlinePointsBottom.push(new THREE.Vector3( ((i+1)*fold_width), 0-(fold_height_fraction*BASE_HEIGHT), 0 ))\r\n\t\t\tdoorOutlinePointsTop.push(new THREE.Vector3( ((i+1)*fold_width), BASE_HEIGHT+(fold_height_fraction*BASE_HEIGHT), 0 ))\r\n\t\t}\r\n\t\t\r\n\t\tvar l = fp+10*i\r\n\t\t\r\n\t\tgeom.faces.push(new THREE.Face3( l-2, l+1, l ))\r\n\t\tgeom.faces.push(new THREE.Face3( l-4, l-2, l ))\r\n\t\tgeom.faces.push(new THREE.Face3( l+1, l+8, l+6 ))\r\n\t\tgeom.faces.push(new THREE.Face3( l, l+1, l+6 ))\r\n\t\tgeom.faces.push(new THREE.Face3( l+1, l+2, l+8 ))\r\n\t\t\r\n\t\tgeom.faces.push(new THREE.Face3( l-3, l+3, l+4 ))\r\n\t\tgeom.faces.push(new THREE.Face3( l-1, l-3, l+4 ))\r\n\t\tgeom.faces.push(new THREE.Face3( l+4, l+3, l+9 ))\r\n\t\tgeom.faces.push(new THREE.Face3( l+9, l+3, l+7 ))\r\n\t\tgeom.faces.push(new THREE.Face3( l+4, l+9, l+5 ))\r\n\t\t\r\n\t}\r\n\t\r\n\tgeom.vertices.push(new THREE.Vector3( BASE_WIDTH, BASE_HEIGHT/2 - (tab_height_fraction*BASE_HEIGHT/2 + tab_triangle_fraction*BASE_HEIGHT), 0 ))\r\n\tgeom.vertices.push(new THREE.Vector3( BASE_WIDTH + tab_width_fraction*BASE_WIDTH, BASE_HEIGHT/2 - tab_height_fraction*BASE_HEIGHT/2, 0 ))\r\n\tgeom.vertices.push(new THREE.Vector3( BASE_WIDTH + tab_width_fraction*BASE_WIDTH, BASE_HEIGHT/2 - (tab_height_fraction*BASE_HEIGHT/2 + tab_triangle_fraction*BASE_HEIGHT), 0 ))\r\n\tgeom.vertices.push(new THREE.Vector3( BASE_WIDTH + tab_width_fraction*BASE_WIDTH, 0-OUTLINE_B_MARGIN, 0 ))\r\n\t\r\n\tdoorOutlinePointsBottom.push(new THREE.Vector3( BASE_WIDTH, BASE_HEIGHT/2 - (tab_height_fraction*BASE_HEIGHT/2 + tab_triangle_fraction*BASE_HEIGHT), 0 ))\r\n\tdoorOutlinePointsBottom.push(new THREE.Vector3( BASE_WIDTH + tab_width_fraction*BASE_WIDTH, BASE_HEIGHT/2 - tab_height_fraction*BASE_HEIGHT/2, 0 ))\r\n\t\r\n\tgeom.vertices.push(new THREE.Vector3( BASE_WIDTH, BASE_HEIGHT/2 + (tab_height_fraction*BASE_HEIGHT/2 + tab_triangle_fraction*BASE_HEIGHT), 0 ))\r\n\tgeom.vertices.push(new THREE.Vector3( BASE_WIDTH + tab_width_fraction*BASE_WIDTH, BASE_HEIGHT/2 + tab_height_fraction*BASE_HEIGHT/2, 0 ))\r\n\tgeom.vertices.push(new THREE.Vector3( BASE_WIDTH + tab_width_fraction*BASE_WIDTH, BASE_HEIGHT/2 + (tab_height_fraction*BASE_HEIGHT/2 + tab_triangle_fraction*BASE_HEIGHT), 0 ))\r\n\tgeom.vertices.push(new THREE.Vector3( BASE_WIDTH + tab_width_fraction*BASE_WIDTH, BASE_HEIGHT+OUTLINE_T_MARGIN, 0 ))\r\n\t\r\n\tdoorOutlinePointsTop.push(new THREE.Vector3( BASE_WIDTH, BASE_HEIGHT/2 + (tab_height_fraction*BASE_HEIGHT/2 + tab_triangle_fraction*BASE_HEIGHT), 0 ))\r\n\tdoorOutlinePointsTop.push(new THREE.Vector3( BASE_WIDTH + tab_width_fraction*BASE_WIDTH, BASE_HEIGHT/2 + tab_height_fraction*BASE_HEIGHT/2, 0 ))\r\n\t\r\n\tgeom.vertices.push(new THREE.Vector3( BASE_WIDTH + OUTLINE_R_MARGIN, 0-OUTLINE_B_MARGIN, 0 ))\r\n\tgeom.vertices.push(new THREE.Vector3( BASE_WIDTH + OUTLINE_R_MARGIN, BASE_HEIGHT+OUTLINE_T_MARGIN, 0 ))\r\n\r\n\tl = fp+10*number_of_folds\r\n\t\r\n\tgeom.faces.push(new THREE.Face3( l, l+1, l+2 ))\r\n\tgeom.faces.push(new THREE.Face3( l, l+3, l-4 ))\r\n\tgeom.faces.push(new THREE.Face3( l, l+2, l+3 ))\r\n\t\r\n\tgeom.faces.push(new THREE.Face3( l+4, l+6, l+5 ))\r\n\tgeom.faces.push(new THREE.Face3( l-3, l+6, l+4 ))\r\n\tgeom.faces.push(new THREE.Face3( l-3, l+7, l+6 ))\r\n\t\r\n\tgeom.faces.push(new THREE.Face3( l+3, l+7, l+8 ))\r\n\tgeom.faces.push(new THREE.Face3( l+8, l+7, l+9 ))\r\n\t\r\n\tvar stagger = stagger_val*(col%2)\r\n\tvar offset_position_x = -CALENDAR_WIDTH/2+1+(col*3)+OUTLINE_L_MARGIN\r\n\tvar offset_position_y = CALENDAR_HEIGHT/2-((row+1)*3)+OUTLINE_B_MARGIN + stagger\r\n\t\r\n\tvar uv_array\r\n\tvar uv_x\r\n\tvar uv_y\r\n\tvar vertex_id\r\n\tvar face\r\n\tfor ( let face_id = 0; face_id < geom.faces.length; face_id ++ ) {\r\n\t\tface = geom.faces[face_id]\r\n\t\tuv_array = []\r\n\t\t// console.log(face)\r\n\t\tvertex_id = face.a\r\n\t\tuv_x = (CALENDAR_WIDTH/2 + (geom.vertices[vertex_id].x + offset_position_x)) / CALENDAR_WIDTH\r\n\t\tuv_y = ((CALENDAR_HEIGHT/2 + (geom.vertices[vertex_id].y + offset_position_y)) / CALENDAR_HEIGHT)\r\n\t\tuv_array.push(new THREE.Vector2(uv_x, uv_y))\r\n\t\tvertex_id = face.b\r\n\t\tuv_x = (CALENDAR_WIDTH/2 + (geom.vertices[vertex_id].x + offset_position_x)) / CALENDAR_WIDTH\r\n\t\tuv_y = ((CALENDAR_HEIGHT/2 + (geom.vertices[vertex_id].y + offset_position_y)) / CALENDAR_HEIGHT)\r\n\t\tuv_array.push(new THREE.Vector2(uv_x, uv_y))\r\n\t\tvertex_id = face.c\r\n\t\tuv_x = (CALENDAR_WIDTH/2 + (geom.vertices[vertex_id].x + offset_position_x)) / CALENDAR_WIDTH\r\n\t\tuv_y = ((CALENDAR_HEIGHT/2 + (geom.vertices[vertex_id].y + offset_position_y)) / CALENDAR_HEIGHT)\r\n\t\tuv_array.push(new THREE.Vector2(uv_x, uv_y))\r\n\r\n\t\t// console.log(uv_array)\r\n\t\tgeom.faceVertexUvs[0].push(uv_array)\r\n\t}\r\n\t\r\n\tconst material_outline = new THREE.MeshBasicMaterial( { map: texture, wireframe: false, side: THREE.DoubleSide } );\r\n\r\n\t// const material_outline = new THREE.MeshBasicMaterial( { color: 0xff0000, wireframe: false, side: THREE.DoubleSide } );\r\n\tconst mesh_outline = new THREE.Mesh( geom, material_outline );\r\n\t\r\n\t// var stagger = stagger_val*(col%2)\r\n\tmesh_outline.position.set(-CALENDAR_WIDTH/2+1+(col*3)+OUTLINE_L_MARGIN, CALENDAR_HEIGHT/2-((row+1)*3)+OUTLINE_B_MARGIN + stagger, 0)\r\n\r\n\tvar doorOutlinePoints = doorOutlinePointsTop.concat(doorOutlinePointsBottom.reverse())\r\n\t\r\n\tconst doorOutlineGeom = new THREE.BufferGeometry().setFromPoints( doorOutlinePoints );\r\n\tconst doorOutlineMaterial = new THREE.LineBasicMaterial( { color: 0x000000 } );\r\n\tconst line = new THREE.Line( doorOutlineGeom, doorOutlineMaterial );\r\n\t\r\n\tline.position.set(-CALENDAR_WIDTH/2+1+(col*3)+OUTLINE_L_MARGIN, CALENDAR_HEIGHT/2-((row+1)*3)+OUTLINE_B_MARGIN + stagger, 0.001)\r\n\r\n\treturn([mesh_outline, line])\r\n}\r\n\r\nfunction createDoorSkeleton() {\r\n\t\r\n\tvar bones = []\r\n\tvar bone = new THREE.Bone()\r\n\tbone.position.x = 0 \r\n\tbone.position.y = 0.5\r\n\tbones.push(bone)\r\n\t\r\n\tvar prevBone = bone\r\n\tfor (var i = 0; i < number_of_folds; i++) {\r\n\t\tbone = new THREE.Bone()\r\n\t\tbone.position.x = fold_width \r\n\t\t//bone.position.y = 0.5\r\n\t\tbones.push(bone)\r\n\t\tprevBone.add( bone )\r\n\t\tprevBone = bone\r\n\t\t\r\n\t}\r\n\t\r\n\tbone = new THREE.Bone()\r\n\tbone.position.x = tab_width_fraction*BASE_WIDTH \r\n\t//bone.position.y = 0.5\r\n\tbones.push(bone)\r\n\tprevBone.add( bone )\r\n\t\r\n\tconst skeleton = new THREE.Skeleton( bones );\r\n\t\r\n\treturn(skeleton)\r\n}\r\n\r\nfunction createDoor(row, col, texture_front) {\r\n\tconst geometry = new createDoorMesh();\r\n\t\r\n\tvar stagger = stagger_val*(col%2)\r\n\tvar offset_position_x = -CALENDAR_WIDTH/2+1+(col*3)+OUTLINE_L_MARGIN\r\n\tvar offset_position_y = CALENDAR_HEIGHT/2-((row+1)*3)+OUTLINE_B_MARGIN + stagger\r\n\t\r\n\tvar uv_array\r\n\tvar uv_x\r\n\tvar uv_y\r\n\tvar vertex_id\r\n\tvar face\r\n\tfor ( let face_id = 0; face_id < geometry.faces.length; face_id ++ ) {\r\n\t\tface = geometry.faces[face_id]\r\n\t\tuv_array = []\r\n\t\t// console.log(face)\r\n\t\tvertex_id = face.a\r\n\t\tuv_x = (CALENDAR_WIDTH/2 + (geometry.vertices[vertex_id].x + offset_position_x)) / CALENDAR_WIDTH\r\n\t\tuv_y = ((CALENDAR_HEIGHT/2 + (geometry.vertices[vertex_id].y + offset_position_y)) / CALENDAR_HEIGHT)\r\n\t\tuv_array.push(new THREE.Vector2(uv_x, uv_y))\r\n\t\tvertex_id = face.b\r\n\t\tuv_x = (CALENDAR_WIDTH/2 + (geometry.vertices[vertex_id].x + offset_position_x)) / CALENDAR_WIDTH\r\n\t\tuv_y = ((CALENDAR_HEIGHT/2 + (geometry.vertices[vertex_id].y + offset_position_y)) / CALENDAR_HEIGHT)\r\n\t\tuv_array.push(new THREE.Vector2(uv_x, uv_y))\r\n\t\tvertex_id = face.c\r\n\t\tuv_x = (CALENDAR_WIDTH/2 + (geometry.vertices[vertex_id].x + offset_position_x)) / CALENDAR_WIDTH\r\n\t\tuv_y = ((CALENDAR_HEIGHT/2 + (geometry.vertices[vertex_id].y + offset_position_y)) / CALENDAR_HEIGHT)\r\n\t\tuv_array.push(new THREE.Vector2(uv_x, uv_y))\r\n\r\n\t\t// console.log(uv_array)\r\n\t\tgeometry.faceVertexUvs[0].push(uv_array)\r\n\t}\r\n\t\r\n\tgeometry.computeFaceNormals();\t\r\n\tgeometry.computeVertexNormals();\r\n\tgeometry.uvsNeedUpdate = true\r\n\t\r\n\tvar bufferGeometry = new THREE.BufferGeometry().fromGeometry( geometry );\r\n\t\r\n\tconst position = bufferGeometry.attributes.position;\r\n\r\n\tconst vertex = new THREE.Vector3();\r\n\r\n\tconst skinIndices = [];\r\n\tconst skinWeights = [];\r\n\r\n\tfor ( let i = 0; i < position.count; i ++ ) {\r\n\r\n\t\tvertex.fromBufferAttribute( position, i );\r\n\r\n\t\t// compute skinIndex and skinWeight based on some configuration data\r\n\t\tconst skinIndex = Math.floor( vertex.x / fold_width );\r\n\t\t// const skinWeight = ( x % fold_width ) / fold_width;\r\n\t\tconst skinWeight = 0;\r\n\r\n\t\tskinIndices.push( skinIndex, skinIndex + 1, 0, 0 );\r\n\t\tskinWeights.push( 1 - skinWeight, skinWeight, 0, 0 );\r\n\r\n\t}\r\n\r\n\tbufferGeometry.setAttribute( 'skinIndex', new THREE.Uint16BufferAttribute( skinIndices, 4 ) );\r\n\tbufferGeometry.setAttribute( 'skinWeight', new THREE.Float32BufferAttribute( skinWeights, 4 ) );\r\n\t\r\n\t\r\n\tconst material_front = new THREE.MeshBasicMaterial( { map: texture_front, wireframe: false, side: THREE.BackSide, skinning: true } );\r\n\t// const material_front = new THREE.MeshBasicMaterial( { color: 0xffffff, wireframe: false, side: THREE.BackSide, skinning: true } );\r\n\t\r\n\t\r\n\tconst material_back = new THREE.MeshBasicMaterial( { color: 0x333333, wireframe: false, side: THREE.FrontSide, skinning: true } );\r\n\tvar meshFront = new THREE.SkinnedMesh( bufferGeometry, material_front)\r\n\tvar meshBack = new THREE.SkinnedMesh( bufferGeometry, material_back)\r\n\t\r\n\tconst skeleton = createDoorSkeleton();\r\n\tconst rootBone = skeleton.bones[ 0 ];\r\n\tmeshFront.add( rootBone );\r\n\tmeshFront.bind( skeleton );\r\n\tmeshBack.add( rootBone );\r\n\tmeshBack.bind( skeleton );\r\n\t\r\n\t// skeleton.bones[0].rotation.y = -0.8;\r\n\t// skeleton.bones[1].rotation.y = -0.8;\r\n\t// skeleton.bones[2].rotation.y = -0.8;\r\n\t// skeleton.bones[3].rotation.y = -0.8;\r\n\t// skeleton.bones[4].rotation.y = -0.8;\r\n\t\r\n\t\r\n\t\r\n\tmeshFront.position.set(offset_position_x, offset_position_y, 0)\r\n\tmeshBack.position.set(offset_position_x, offset_position_y, 0)\r\n\t\r\n\t// console.log(meshFront)\r\n\t\r\n\t\r\n\tvar meshPosition = [offset_position_x + BASE_WIDTH/2, offset_position_y + BASE_HEIGHT/2]\r\n\treturn([meshFront, meshBack, meshPosition])\r\n}\r\n\r\n\r\nfunction createAdventFrontPanel(texture) {\r\n\tconst WIDTH = CALENDAR_WIDTH\r\n\tconst HEIGHT = CALENDAR_HEIGHT\r\n\t\r\n\tvar geom = new THREE.Geometry();\r\n\t\r\n\tgeom.vertices.push(new THREE.Vector3( 0-WIDTH/2, 0-HEIGHT/2, 0 ))\r\n\tgeom.vertices.push(new THREE.Vector3( 0-WIDTH/2, 0+HEIGHT/2, 0 ))\r\n\tgeom.vertices.push(new THREE.Vector3( 0+WIDTH/2, 0-HEIGHT/2, 0 ))\r\n\tgeom.vertices.push(new THREE.Vector3( 0+WIDTH/2, 0+HEIGHT/2, 0 ))\r\n\t\r\n\t\r\n\tvar door_points_lists = []\r\n\tvar fp = 4\r\n\tvar i\r\n\tvar j\r\n\tfor (i = 0; i < 6; i++) {\r\n\t\tfor (j = 0; j < 4; j++) {\r\n\t\t\t\r\n\t\t\tvar stagger = stagger_val*(j%2)\r\n\t\t\t\r\n\t\t\tgeom.vertices.push(new THREE.Vector3(-WIDTH/2 + 1 + 3*j, HEIGHT/2 - 1 - 3*i + stagger, 0 ))\r\n\t\t\tgeom.vertices.push(new THREE.Vector3(-WIDTH/2 + 1 + 3*j, HEIGHT/2 - 1 - 3*i - 2 + stagger, 0 ))\r\n\t\t\tgeom.vertices.push(new THREE.Vector3(-WIDTH/2 + 1 + 3*j + 2, HEIGHT/2 - 1 - 3*i + stagger, 0 ))\r\n\t\t\tgeom.vertices.push(new THREE.Vector3(-WIDTH/2 + 1 + 3*j + 2, HEIGHT/2 - 1 - 3*i - 2 + stagger, 0 ))\r\n\t\t\t\r\n\t\t\tdoor_points_lists.push([fp, fp+1, fp+2, fp+3])\r\n\t\t\t// geom.faces.push(new THREE.Face3( fp, fp+1, fp+2))\r\n\t\t\t// geom.faces.push(new THREE.Face3( fp+1, fp+3, fp+2))\r\n\t\t\tfp += 4\r\n\t\t\t\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\t\r\n\t// get array of vertices\r\n\tvar positions = geom.vertices\r\n\tvar positions_array = []\r\n\tfor (i = 0; i < positions.length; i++) {\r\n\t\tvar v = positions[i]\r\n\t\tpositions_array.push([v.x, v.y]) \r\n\t}\r\n\t\r\n\t\r\n\tvar triangles = Delaunator.from(positions_array).triangles\r\n\tfor (i = 0; i < triangles.length; i+=3) {\r\n\t\tvar triangle = [triangles[i], triangles[i+1], triangles[i+2]]\r\n\t\tvar add_face = true\r\n\t\tfor (j = 0; j < door_points_lists.length; j++) {\r\n\t\t\tvar door_points = door_points_lists[j]\r\n\t\t\tif (door_points.includes(triangle[0]) && door_points.includes(triangle[1]) && door_points.includes(triangle[2])) {\r\n\t\t\t\tadd_face = false\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (add_face) {\r\n\t\t\tgeom.faces.push(new THREE.Face3( triangle[0], triangle[1], triangle[2]))\r\n\t\t}\r\n\t}\r\n\t\r\n\tvar offset_position_x = 0\r\n\tvar offset_position_y = 0\r\n\tvar uv_array\r\n\tvar uv_x\r\n\tvar uv_y\r\n\tvar vertex_id\r\n\tvar face\r\n\tfor ( let face_id = 0; face_id < geom.faces.length; face_id ++ ) {\r\n\t\tface = geom.faces[face_id]\r\n\t\tuv_array = []\r\n\t\t// console.log(face)\r\n\t\tvertex_id = face.a\r\n\t\tuv_x = (CALENDAR_WIDTH/2 + (geom.vertices[vertex_id].x + offset_position_x)) / CALENDAR_WIDTH\r\n\t\tuv_y = ((CALENDAR_HEIGHT/2 + (geom.vertices[vertex_id].y + offset_position_y)) / CALENDAR_HEIGHT)\r\n\t\tuv_array.push(new THREE.Vector2(uv_x, uv_y))\r\n\t\tvertex_id = face.b\r\n\t\tuv_x = (CALENDAR_WIDTH/2 + (geom.vertices[vertex_id].x + offset_position_x)) / CALENDAR_WIDTH\r\n\t\tuv_y = ((CALENDAR_HEIGHT/2 + (geom.vertices[vertex_id].y + offset_position_y)) / CALENDAR_HEIGHT)\r\n\t\tuv_array.push(new THREE.Vector2(uv_x, uv_y))\r\n\t\tvertex_id = face.c\r\n\t\tuv_x = (CALENDAR_WIDTH/2 + (geom.vertices[vertex_id].x + offset_position_x)) / CALENDAR_WIDTH\r\n\t\tuv_y = ((CALENDAR_HEIGHT/2 + (geom.vertices[vertex_id].y + offset_position_y)) / CALENDAR_HEIGHT)\r\n\t\tuv_array.push(new THREE.Vector2(uv_x, uv_y))\r\n\r\n\t\t// console.log(uv_array)\r\n\t\tgeom.faceVertexUvs[0].push(uv_array)\r\n\t}\r\n\tgeom.faceVertexUvs[1] = geom.faceVertexUvs[0] \r\n\r\n\tconst material = new THREE.MeshBasicMaterial( { map: texture, wireframe: false, side: THREE.DoubleSide } );\r\n\t// const material = new THREE.MeshBasicMaterial( { color: 0xff0000, wireframe: false, side: THREE.DoubleSide } );\r\n\tconst mesh = new THREE.Mesh( geom, material );\r\n\t\r\n\treturn(mesh)\r\n\t\r\n}\r\n\r\nfunction getTabFaceIndexArray() {\r\n\tlet fp = 2*number_of_folds\r\n\treturn [fp, fp+1, fp+2, fp+3]\r\n\t\r\n}\r\n\r\n\r\n\r\n\r\nexport {createDoor, createDoorOutline, createAdventFrontPanel, getTabFaceIndexArray}","import * as THREE from 'three';\r\n\r\nconst particleNum = 5000;\r\nconst maxRange = 1000;\r\nconst minRange = maxRange / 2;\r\nconst textureSize = 8.0;\r\n\r\nconst drawRadialGradation = (ctx, canvasRadius, canvasW, canvasH) => {\r\n    ctx.save();\r\n    const gradient = ctx.createRadialGradient(canvasRadius,canvasRadius,0,canvasRadius,canvasRadius,canvasRadius);\r\n    gradient.addColorStop(0, 'rgba(255,255,255,1.0)');\r\n    gradient.addColorStop(0.5, 'rgba(255,255,255,0.5)');\r\n    gradient.addColorStop(1, 'rgba(255,255,255,0)');\r\n    ctx.fillStyle = gradient;\r\n    ctx.fillRect(0,0,canvasW,canvasH);\r\n    ctx.restore();\r\n}\r\n\r\nconst getTexture = () => {\r\n    const canvas = document.createElement('canvas');\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    const diameter = textureSize;\r\n    canvas.width = diameter;\r\n    canvas.height = diameter;\r\n    const canvasRadius = diameter / 2;\r\n\r\n    /* gradation circle\r\n    ------------------------ */\r\n    drawRadialGradation(ctx, canvasRadius, canvas.width, canvas.height);\r\n    \r\n    /* snow crystal\r\n    ------------------------ */\r\n    // drawSnowCrystal(ctx, canvasRadius);\r\n\r\n    const texture = new THREE.Texture(canvas);\r\n    //texture.minFilter = THREE.NearestFilter;\r\n    texture.type = THREE.FloatType;\r\n    texture.needsUpdate = true;\r\n    return texture;\r\n}\r\n\r\nconst pointGeometry = new THREE.Geometry();\r\nfor (let i = 0; i < particleNum; i++) {\r\n\tconst x = Math.floor(Math.random() * maxRange - minRange);\r\n\tconst y = Math.floor(Math.random() * maxRange - minRange);\r\n\tconst z = Math.floor(Math.random() * maxRange - minRange);\r\n\tconst particle = new THREE.Vector3(x, y, z);\r\n\tpointGeometry.vertices.push(particle);\r\n\t// const color = new THREE.Color(0xffffff);\r\n\t// pointGeometry.colors.push(color);\r\n}\r\n\r\nconst pointMaterial = new THREE.PointsMaterial({\r\n\tsize: 8,\r\n\tcolor: 0xffffff,\r\n\tvertexColors: false,\r\n\tmap: getTexture(),\r\n\t// blending: THREE.AdditiveBlending,\r\n\ttransparent: true,\r\n\t// opacity: 0.8,\r\n\tfog: true,\r\n\tdepthWrite: false\r\n});\r\n\r\nconst velocities = [];\r\nfor (let i = 0; i < particleNum; i++) {\r\n\tconst x = Math.floor(Math.random() * 6 - 3) * 0.1;\r\n\tconst y = Math.floor(Math.random() * 10 + 3) * - 0.05;\r\n\tconst z = Math.floor(Math.random() * 6 - 3) * 0.1;\r\n\tconst particle = new THREE.Vector3(x, y, z);\r\n\tvelocities.push(particle);\r\n}\r\n\r\nvar snowEffectParticles = new THREE.Points(pointGeometry, pointMaterial);\r\nsnowEffectParticles.geometry.velocities = velocities;\r\n\r\n\r\nfunction updateSnowEffectParticles(particles, timeStamp) {\r\n\r\n\tconst posArr = particles.geometry.vertices;\r\n    const velArr = particles.geometry.velocities;\r\n\r\n    posArr.forEach((vertex, i) => {\r\n        const velocity = velArr[i];\r\n\r\n        // const x = i * 3;\r\n        // const y = i * 3 + 1;\r\n        // const z = i * 3 + 2;\r\n        \r\n        const velX = Math.sin(timeStamp * 0.001 * velocity.x) * 0.1;\r\n        const velZ = Math.cos(timeStamp * 0.0015 * velocity.z) * 0.1;\r\n        \r\n        vertex.x += velX;\r\n        vertex.y += velocity.y;\r\n        vertex.z += velZ;\r\n\r\n        if (vertex.y < -minRange ) {\r\n            vertex.y = minRange;\r\n        }\r\n\r\n    })\r\n\r\n    particles.geometry.verticesNeedUpdate = true;\r\n}\r\n\r\n\r\nexport {snowEffectParticles, updateSnowEffectParticles}\r\n\r\n","export default __webpack_public_path__ + \"static/media/advent_background.da07cc5d.png\";","export default __webpack_public_path__ + \"static/media/test.ff137c04.mp3\";","export default __webpack_public_path__ + \"static/media/test2.db6ca414.mp3\";","export default __webpack_public_path__ + \"static/media/test3.c40de50b.mp3\";","export default __webpack_public_path__ + \"static/media/cheering.31ae307a.mp3\";","import React from 'react';\r\nimport * as THREE from 'three';\r\nimport * as TWEEN from 'tween.js'\r\nimport {OrbitControls} from \"three/examples/jsm/controls/OrbitControls\";\r\nimport {createDoor, createDoorOutline, createAdventFrontPanel, getTabFaceIndexArray} from './MeshCreation'\r\nimport {snowEffectParticles, updateSnowEffectParticles} from './SnowEffect'\r\n\r\n// import bodie_test from '../images/bodie_test.jpg'\r\nimport advent_background from '../images/advent_background.png'\r\n\r\nimport sound1 from \"../sounds/test.mp3\"\r\nimport sound2 from \"../sounds/test2.mp3\"\r\nimport sound3 from \"../sounds/test3.mp3\"\r\nimport sound4 from \"../sounds/test2.mp3\"\r\nimport sound5 from \"../sounds/test.mp3\"\r\n\r\nimport sound_cheer from \"../sounds/cheering.mp3\"\r\n\r\nclass Calendar3D extends React.Component {\r\n\tconstructor(props) {\r\n\t  super(props);\r\n\t  // Don't call this.setState() here!\r\n\t  this.state = { play: this.props.play,\r\n\t\t\t\t\t update: false};\r\n\t}\r\n\t\r\n\tcomponentDidMount() {\r\n\t\t\r\n\t\t// this.front_texture = new THREE.TextureLoader().load(\"https://i.imgur.com/5FTxFXe.jpg\")\r\n\t\tthis.front_texture = new THREE.TextureLoader().load(advent_background)\r\n\t\t// this.front_texture.needsUpdate = true;\r\n\t\t\r\n\t\t\r\n\t\tthis.doorStates = []\r\n\t\tfor (var k = 0; k < 25; k++) {\r\n\t\t\tthis.doorStates.push(\r\n\t\t\t\t{\r\n\t\t\t\t\topen: false,\r\n\t\t\t\t\tisMoving: false,\r\n\t\t\t\t\tpanelSound: [true, true, true, true, true],\r\n\t\t\t\t\tmasterValue: 0\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t}\r\n\t\t\r\n\t\tconst loadSound = (src) => {\r\n\t\t\tvar sound = document.createElement(\"audio\");\r\n\t\t\tsound.src = src\r\n\t\t\tsound.setAttribute(\"preload\", \"auto\");\r\n\t\t\t// sound.setAttribute(\"controls\", \"none\");\r\n\t\t\tsound.style.display = \"none\";\r\n\t\t\tdocument.body.appendChild(sound);\r\n\t\t\treturn sound\r\n\t\t\t\r\n\t\t\t// var snd1  = new Audio();\r\n\t\t\t// var src1  = document.createElement(\"source\");\r\n\t\t\t// src1.type = \"audio/mpeg\";\r\n\t\t\t// src1.src  = src;\r\n\t\t\t// snd1.appendChild(src1);\r\n\t\t\t\r\n\t\t\t// return snd1\r\n\t\t\t\r\n\t\t\t// var sound = new Howl({\r\n\t\t\t  // src: [src]\r\n\t\t\t// });\r\n\t\t\t// return sound\r\n\t\t}\r\n\t\t\r\n\t\tthis.cardboardSound1 = loadSound(sound1)\r\n\t\tthis.cardboardSound2 = loadSound(sound2)\r\n\t\tthis.cardboardSound3 = loadSound(sound3)\r\n\t\tthis.cardboardSound4 = loadSound(sound4)\r\n\t\tthis.cardboardSound5 = loadSound(sound5)\r\n\t\t\r\n\t\tthis.cheerSound = loadSound(sound_cheer)\r\n\t\t\r\n\t\t// console.log(this.cardboardSound1)\r\n\t\t\r\n\t\t\r\n\t\tconst canvas = this.canvas\r\n\t\t// const renderer = new THREE.WebGLRenderer({canvas});\r\n\t\tconst renderer = new THREE.WebGLRenderer({canvas, alpha: true});\r\n\t\trenderer.autoClearColor = false;\r\n\t\trenderer.setSize( window.innerWidth, window.innerHeight );\r\n\t\tdocument.body.appendChild( renderer.domElement );\r\n\r\n\r\n\t\tconst scene = new THREE.Scene();\r\n\t\tconst camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 );\r\n\t\tconst controls = new OrbitControls( camera, renderer.domElement );\r\n\t\tcontrols.minDistance = 1;\r\n\t\tcontrols.maxDistance = 20;\r\n\t\tcontrols.keys = {\r\n\t\t\t  LEFT: 37, //left arrow\r\n\t\t\t  UP: 38, // up arrow\r\n\t\t\t  RIGHT: 39, // right arrow\r\n\t\t\t  BOTTOM: 40 // down arrow\r\n\t\t\t};\r\n\t\tcontrols.minPolarAngle = Math.PI/4; // radians\r\n\t\tcontrols.maxPolarAngle = 3*Math.PI/4; // radians\r\n\r\n\t\tcontrols.minAzimuthAngle = - Math.PI/4; // radians\r\n\t\tcontrols.maxAzimuthAngle = Math.PI/4; // radians\r\n\r\n\t\tvar minPan = new THREE.Vector3( - 7, - 10, 0 );\r\n\t\tvar maxPan = new THREE.Vector3( 7, 10, 0 );\r\n\r\n\t\tcontrols.addEventListener(\"change\", function() {\r\n\t\t\tvar v = new THREE.Vector3().copy(controls.target);\r\n\t\t\tcontrols.target.clamp(minPan, maxPan);\r\n\t\t\tv.sub(controls.target);\r\n\t\t\tcamera.position.sub(v);\r\n\t\t})\r\n\r\n\r\n\r\n\t\t// const geometry = new THREE.PlaneGeometry( 13, 22, 1, 1 );\r\n\t\tconst frontPanel = createAdventFrontPanel(this.front_texture)\r\n\t\tscene.add( frontPanel )\r\n\t\t\r\n\t\tthis.doorArrays = []\r\n\t\tthis.doorsAndOutlineArray = []\r\n\t\tthis.doorArrayFront = []\r\n\t\tthis.doorArrayBack = []\r\n\t\tthis.doorPositions = []\r\n\t\t\r\n\t\tfor (var i = 0; i < 6; i++) {\r\n\t\t\tfor (var j = 0; j < 4; j++) {\r\n\t\t\t\tvar door = createDoor(i, j, this.front_texture)\r\n\t\t\t\t// console.log(door[0])\r\n\t\t\t\tdoor[0].door_id = 4*i + j\r\n\t\t\t\tdoor[1].door_id = 4*i + j\r\n\t\t\t\tscene.add( door[0] )\r\n\t\t\t\tthis.doorArrayFront.push( scene.children[scene.children.length-1] )\r\n\t\t\t\tthis.doorArrays.push( scene.children[scene.children.length-1] )\r\n\t\t\t\tthis.doorsAndOutlineArray.push( scene.children[scene.children.length-1] )\r\n\t\t\t\tconst helper = new THREE.SkeletonHelper( door[0] );\r\n\t\t\t\tscene.add( helper )\r\n\t\t\t\t\r\n\t\t\t\tscene.add( door[1] )\r\n\t\t\t\tthis.doorArrayBack.push( scene.children[scene.children.length-1] )\r\n\t\t\t\tthis.doorArrays.push( scene.children[scene.children.length-1] )\r\n\t\t\t\tthis.doorsAndOutlineArray.push( scene.children[scene.children.length-1] )\r\n\t\t\t\t\r\n\t\t\t\tthis.doorPositions.push( door[2] )\r\n\t\t\t\t\r\n\t\t\t\tvar door_outline = createDoorOutline(i, j, this.front_texture)\r\n\t\t\t\tdoor_outline[0].door_id = 4*i + j\r\n\t\t\t\tscene.add( door_outline[0] )\r\n\t\t\t\tthis.doorsAndOutlineArray.push( scene.children[scene.children.length-1] )\r\n\t\t\t\t\r\n\t\t\t\tscene.add( door_outline[1] )\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tvar testDragGeom = new THREE.Geometry();\r\n\t\ttestDragGeom.vertices.push(new THREE.Vector3(-100, -100, 0))\r\n\t\ttestDragGeom.vertices.push(new THREE.Vector3(100, -100, 0))\r\n\t\ttestDragGeom.vertices.push(new THREE.Vector3(100, 100, 0))\r\n\t\ttestDragGeom.vertices.push(new THREE.Vector3(-100, 100, 0))\r\n\t\t\r\n\t\ttestDragGeom.faces.push(new THREE.Face3( 0, 3, 2 ))\r\n\t\ttestDragGeom.faces.push(new THREE.Face3( 0, 2, 1 ))\r\n\t\t\r\n\t\tconst testDragMat = new THREE.MeshBasicMaterial( { color: 0xffffff, visible: false, wireframe: true, side: THREE.DoubleSide } );\r\n\t\t\r\n\t\tconst testDragMesh = new THREE.Mesh( testDragGeom, testDragMat )\r\n\t\tscene.add( testDragMesh )\r\n\t\tthis.testDragPanel = scene.children[scene.children.length-1]\r\n\t\t\r\n\t\t// var testDragGeomView = new THREE.Geometry();\r\n\t\t// testDragGeomView.vertices.push(new THREE.Vector3(-0.65, 0, 0.01))\r\n\t\t// testDragGeomView.vertices.push(new THREE.Vector3(2.4, 0, 0.01))\r\n\t\t// testDragGeomView.vertices.push(new THREE.Vector3(2.4, 1, 0.01))\r\n\t\t// testDragGeomView.vertices.push(new THREE.Vector3(-0.65, 1, 0.01))\r\n\t\t\r\n\t\t// testDragGeomView.faces.push(new THREE.Face3( 0, 3, 2 ))\r\n\t\t// testDragGeomView.faces.push(new THREE.Face3( 0, 2, 1 ))\r\n\t\t\r\n\t\t// const testDragMatView = new THREE.MeshBasicMaterial( { color: 0x00ff00, wireframe: true, side: THREE.DoubleSide } );\r\n\t\t\r\n\t\t// const testDragMeshView = new THREE.Mesh( testDragGeomView, testDragMatView )\r\n\t\t// scene.add( testDragMeshView )\r\n\t\t\r\n\t\t// console.log(camera)\r\n\r\n\t\tcamera.position.z = 20;\r\n\t\tcontrols.update();\r\n\r\n\t\t// var snow = snowEffectParticles()\r\n\t\tscene.add(snowEffectParticles);\r\n\r\n\r\n\t\tconst onResize = () => {\r\n\t\t\tconst width = window.innerWidth;\r\n\t\t\tconst height = window.innerHeight;\r\n\t\t\trenderer.setPixelRatio(window.devicePixelRatio);\r\n\t\t\trenderer.setSize(width, height);\r\n\t\t\tcamera.aspect = width / height;\r\n\t\t\tcamera.updateProjectionMatrix();\r\n\t\t}\r\n\t\twindow.addEventListener('resize', onResize);\r\n\t\t\r\n\t\t\r\n\t\tconst raycaster = new THREE.Raycaster();\r\n\r\n\t\tconst checkMouseIntersection = (event) => {\r\n\t\t\t\r\n\t\t\tif (camera.position.z > 5.5) {return}\r\n\t\t\t// console.log(event)\r\n\t\t\tvar mouse = new THREE.Vector2();\r\n\t\t\tif (event.type === \"mousedown\") {\r\n\t\t\t\t\r\n\t\t\t\tmouse.x = ( event.clientX / window.innerWidth ) * 2 - 1;\r\n\t\t\t\tmouse.y = - ( event.clientY / window.innerHeight ) * 2 + 1;\r\n\t\t\t} else if (event.type === \"touchstart\") {\r\n\t\t\t\tmouse.x = ( event.touches[0].clientX / window.innerWidth ) * 2 - 1;\r\n\t\t\t\tmouse.y = - ( event.touches[0].clientY  / window.innerHeight ) * 2 + 1;\r\n\t\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// console.log(mouse)\r\n\t\t\t\r\n\t\t\tvar intersects\r\n\t\t\tthis.currentDoor = null\r\n\t\t\tthis.currentDoor_initialx = null\r\n\t\t\tthis.currentDoor_initialMasterValue = null\r\n\t\t\tthis.anyDoorMoving = false\r\n\t\t\t// update the picking ray with the camera and mouse position\r\n\t\t\traycaster.setFromCamera( mouse, camera );\r\n\t\t\t// scene.add(new THREE.ArrowHelper(raycaster.ray.direction, raycaster.ray.origin, 300, 0x00ff00) );\r\n\t\t\t// calculate objects intersecting the picking ray\r\n\t\t\tif (this.doorArrayFront) {\r\n\t\t\t\tintersects = raycaster.intersectObjects( this.doorArrays, true );\r\n\t\t\t\t// console.log(intersects)\r\n\t\t\t\tfor (var i = 0; i < intersects.length; i++) {\r\n\t\t\t\t\t// if (getTabFaceIndexArray().includes(intersects[i].faceIndex)) {\r\n\t\t\t\t\t\t// console.log(intersects)\r\n\t\t\t\t\t\t// console.log(intersects[0].object.door_id)\r\n\t\t\t\t\t\tvar door_id = intersects[i].object.door_id\r\n\t\t\t\t\t\tif (!this.anyDoorMoving) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// console.log(this.doorState)\r\n\t\t\t\t\t\t\tvar initialDoorMasterValue = this.doorStates[door_id].masterValue\r\n\t\t\t\t\t\t\tif (this.testDragPanel) {\r\n\t\t\t\t\t\t\t\tvar drag_intersect = raycaster.intersectObjects( [this.testDragPanel] )\r\n\t\t\t\t\t\t\t\tif (drag_intersect.length > 0) {\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tcontrols.enableRotate = false;\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t// console.log('initial')\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t// console.log(drag_intersect[0].point.x)\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tthis.currentDoor = door_id\r\n\t\t\t\t\t\t\t\t\tthis.currentDoor_initialx = drag_intersect[0].point.x\r\n\t\t\t\t\t\t\t\t\tthis.currentDoor_initialMasterValue = initialDoorMasterValue\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tif (event.type === \"mousedown\") {\r\n\t\t\t\t\t\t\t\t\t\tthis.canvas.addEventListener( 'mousemove', openDoor, false );\r\n\t\t\t\t\t\t\t\t\t\tthis.canvas.addEventListener( 'mouseup', endOpenDoor, false );\r\n\t\t\t\t\t\t\t\t\t} else if (event.type === \"touchstart\") {\r\n\t\t\t\t\t\t\t\t\t\tthis.canvas.addEventListener( 'touchmove', openDoor, false );\r\n\t\t\t\t\t\t\t\t\t\tthis.canvas.addEventListener( 'touchend', endOpenDoor, false );\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t// }\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// if (this.testDragPanel) {\r\n\t\t\t\t// intersects = raycaster.intersectObjects( [this.testDragPanel] );\r\n\t\t\t\t// if (intersects.length > 0) {\r\n\t\t\t\t\t// console.log(intersects)\r\n\t\t\t\t\t// controls.enableRotate = false;\r\n\t\t\t\t// }\r\n\t\t\t// }\r\n\r\n\t\t}\r\n\t\t\r\n\t\tconst endOpenDoor = (event) => {\r\n\t\t\t\r\n\t\t\tvar door = this.currentDoor\r\n\t\t\t\r\n\t\t\tif (this.doorStates[door].masterValue !== 1 && this.doorStates[door].masterValue !== 0) {\r\n\t\t\t\tvar target\r\n\t\t\t\tvar time\r\n\t\t\t\tif (this.doorStates[door].masterValue > 0.5) {\r\n\t\t\t\t\ttarget = 1\r\n\t\t\t\t\ttime = Math.abs(this.doorStates[door].masterValue - 1) * 2000\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttarget = 0\r\n\t\t\t\t\ttime = Math.abs(this.doorStates[door].masterValue - 0) * 2000\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// console.log(target)\r\n\t\t\t\t// console.log(time)\r\n\t\t\t\r\n\t\t\t\tthis.anyDoorMoving = true\r\n\t\t\t\t\r\n\t\t\t\tnew TWEEN.Tween( this.doorStates[door] )\r\n\t\t\t\t\t.to({masterValue: target}, time)\r\n\t\t\t\t\t.easing(TWEEN.Easing.Sinusoidal.Out)\r\n\t\t\t\t\t.onUpdate(() => {\r\n\t\t\t\t\t\tadjustDoorAngle(door, this.doorStates[door].masterValue)\r\n\t\t\t\t\t })\r\n\t\t\t\t\t.onComplete(() => {\r\n\t\t\t\t\t\tthis.anyDoorMoving =false\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.start()\r\n\t\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tthis.canvas.removeEventListener( 'mousemove', openDoor, false );\r\n\t\t\tthis.canvas.removeEventListener( 'touchmove', openDoor, false );\r\n\t\t\tthis.canvas.removeEventListener( 'mouseup', endOpenDoor, false );\r\n\t\t\tthis.canvas.removeEventListener( 'touchend', endOpenDoor, false );\r\n\t\t}\r\n\t\t\r\n\t\tconst openDoor = (event) => {\r\n\t\t\t\r\n\t\t\tvar door = this.currentDoor\r\n\t\t\tvar initial_x = this.currentDoor_initialx\r\n\t\t\tvar initial_door = this.currentDoor_initialMasterValue\r\n\t\t\t\r\n\t\t\t// console.log('here')\r\n\t\t\t\r\n\t\t\tconst DOOR_OPEN_WIDTH = 3.05 // equivalent to door open fraction of 1\r\n\t\t\t\r\n\t\t\tconst DOOR_OPEN_MAX = 1.2\r\n\t\t\t\r\n\t\t\tconst DOOR_OPEN_MIN = 0\r\n\t\t\t\r\n\t\t\tvar mouse = new THREE.Vector2();\r\n\t\t\tif (event.type === \"mousemove\") {\r\n\t\t\t\tmouse.x = ( event.clientX / window.innerWidth ) * 2 - 1;\r\n\t\t\t\tmouse.y = - ( event.clientY / window.innerHeight ) * 2 + 1;\r\n\t\t\t} else if (event.type === \"touchmove\") {\r\n\t\t\t\tmouse.x = ( event.touches[0].clientX / window.innerWidth ) * 2 - 1;\r\n\t\t\t\tmouse.y = - ( event.touches[0].clientY  / window.innerHeight ) * 2 + 1;\t\r\n\t\t\t}\r\n\t\t\traycaster.setFromCamera( mouse, camera );\r\n\t\t\tif (this.testDragPanel) {\r\n\t\t\t\tvar drag_intersect = raycaster.intersectObjects( [this.testDragPanel] )\r\n\t\t\t\tif (drag_intersect.length > 0) {\r\n\t\t\t\t\tvar new_x = drag_intersect[0].point.x\r\n\t\t\t\t\tvar masterValue = initial_door + (initial_x-new_x) / DOOR_OPEN_WIDTH\r\n\t\t\t\t\t// console.log(masterValue)\r\n\t\t\t\t\t\r\n\t\t\t\t\tmasterValue = Math.min(DOOR_OPEN_MAX, masterValue)\r\n\t\t\t\t\tmasterValue = Math.max(DOOR_OPEN_MIN, masterValue)\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\tadjustDoorAngle(door, masterValue)\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (masterValue > 0.05 && this.doorStates[door].panelSound[0]) {this.cardboardSound1.pause(); this.cardboardSound1.currentTime=0; this.cardboardSound1.play(); this.doorStates[door].panelSound[0] = false}\r\n\t\t\t\t\tif (masterValue > 0.2 && this.doorStates[door].panelSound[1]) {this.cardboardSound2.pause(); this.cardboardSound2.currentTime=0; this.cardboardSound2.play(); this.doorStates[door].panelSound[1] = false}\r\n\t\t\t\t\tif (masterValue > 0.3 && this.doorStates[door].panelSound[2]) {this.cardboardSound3.pause(); this.cardboardSound3.currentTime=0; this.cardboardSound3.play(); this.doorStates[door].panelSound[2] = false}\r\n\t\t\t\t\tif (masterValue > 0.55 && this.doorStates[door].panelSound[3]) {this.cardboardSound4.pause(); this.cardboardSound4.currentTime=0; this.cardboardSound4.play(); this.doorStates[door].panelSound[3] = false}\r\n\t\t\t\t\tif (masterValue > 0.7 && this.doorStates[door].panelSound[4]) {this.cardboardSound5.pause(); this.cardboardSound5.currentTime=0; this.cardboardSound5.play(); this.doorStates[door].panelSound[4] = false}\r\n\t\t\t\t\t\r\n\t\t\t\t\tconsole.log(masterValue)\r\n\t\t\t\t\tconsole.log(masterValue >= 0.99 && !this.doorStates[door].open)\r\n\t\t\t\t\tif (masterValue >= 0.99 && !this.doorStates[door].open) {console.log('yay'); this.cheerSound.pause(); this.cheerSound.currentTime=0; this.cheerSound.play(); this.doorStates[door].open = true}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tthis.doorStates[door].masterValue = masterValue\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tconst adjustDoorBoneAngle = (door = 0, bone=0, value=0) => {\r\n\t\t\tif (this.doorArrayFront && this.doorArrayBack) {\r\n\t\t\t\tthis.doorArrayFront[door].skeleton.bones[bone].rotation.y = -value;\r\n\t\t\t\t// fix by using this with custom raycasting check\r\n\t\t\t\t// https://stackoverflow.com/questions/57332347/three-js-get-updated-vertices-with-skeletal-animations\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tconst adjustDoorAngle = (door, masterValue) => {\r\n\t\t\t\r\n\t\t\tvar valueObj0 = {\r\n\t\t\t\tfrac: [0, 0.7, 1, 1.2],\r\n\t\t\t\toutcome: [0, 0, 2, 3]\r\n\t\t\t}\r\n\r\n\t\t\tvar valueObj1 = {\r\n\t\t\t\tfrac: [0, 0.55, 0.7, 1, 1.2],\r\n\t\t\t\toutcome: [0, 0, 1.1, 0.8, 0]\r\n\t\t\t}\r\n\r\n\t\t\tvar valueObj2 = {\r\n\t\t\t\tfrac: [0, 0.3, 0.55, 0.7, 1, 1.2],\r\n\t\t\t\toutcome: [0, 0, 1.1, 0.5, 0.4, 0]\r\n\t\t\t}\r\n\r\n\t\t\tvar valueObj3 = {\r\n\t\t\t\tfrac: [0, 0.2, 0.3, 0.55, 1, 1.2],\r\n\t\t\t\toutcome: [0, 0, 1.1, 0.3, 0.2, 0]\r\n\t\t\t}\r\n\r\n\t\t\tvar valueObj4 = {\r\n\t\t\t\tfrac: [0, 0.05, 0.2, 0.3, 1, 1.2],\r\n\t\t\t\toutcome: [0, 0, 1.1, 0.3, 0.2, 0]\r\n\t\t\t}\r\n\r\n\t\t\tvar valueObj5 = {\r\n\t\t\t\tfrac: [0, 0.05, 0.4, 0.5, 1, 1.2],\r\n\t\t\t\toutcome: [0, 2, 2, 1.5, 0, 0]\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tadjustDoorBoneAngle(door, 0, getSliderValue(masterValue, valueObj0))\r\n\t\t\tadjustDoorBoneAngle(door, 1, getSliderValue(masterValue, valueObj1))\r\n\t\t\tadjustDoorBoneAngle(door, 2, getSliderValue(masterValue, valueObj2))\r\n\t\t\tadjustDoorBoneAngle(door, 3, getSliderValue(masterValue, valueObj3))\r\n\t\t\tadjustDoorBoneAngle(door, 4, getSliderValue(masterValue, valueObj4))\r\n\t\t\tadjustDoorBoneAngle(door, 5, getSliderValue(masterValue, valueObj5))\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tif (masterValue > 0.05 && this.doorStates[door].panelSound[0]) {this.cardboardSound1.pause(); this.cardboardSound1.currentTime=0; this.cardboardSound1.play(); this.doorStates[door].panelSound[0] = false}\r\n\t\t\tif (masterValue > 0.2 && this.doorStates[door].panelSound[1]) {this.cardboardSound2.pause(); this.cardboardSound2.currentTime=0; this.cardboardSound2.play(); this.doorStates[door].panelSound[1] = false}\r\n\t\t\tif (masterValue > 0.3 && this.doorStates[door].panelSound[2]) {this.cardboardSound3.pause(); this.cardboardSound3.currentTime=0; this.cardboardSound3.play(); this.doorStates[door].panelSound[2] = false}\r\n\t\t\tif (masterValue > 0.55 && this.doorStates[door].panelSound[3]) {this.cardboardSound4.pause(); this.cardboardSound4.currentTime=0; this.cardboardSound4.play(); this.doorStates[door].panelSound[3] = false}\r\n\t\t\tif (masterValue > 0.7 && this.doorStates[door].panelSound[4]) {this.cardboardSound5.pause(); this.cardboardSound5.currentTime=0; this.cardboardSound5.play(); this.doorStates[door].panelSound[4] = false}\r\n\t\t\t\r\n\t\t\tif (masterValue >= 0.99 && !this.doorStates[door].open) {this.cheerSound.pause(); this.cheerSound.currentTime=0; this.cheerSound.play(); this.doorStates[door].open = true}\r\n\t\t}\r\n\t\t\r\n\t\tconst getSliderValue = (masterValue, sliderObj) => {\r\n\t\t  if (masterValue === 0) {return sliderObj.outcome[0]}\r\n\t\t  \r\n\t\t  var indexUpper = sliderObj.frac.findIndex(x => x >= masterValue)\r\n\t\t  var indexLower = indexUpper - 1\r\n\t\t  \r\n\t\t  var fraction = (masterValue - sliderObj.frac[indexLower]) / (sliderObj.frac[indexUpper] - sliderObj.frac[indexLower])\r\n\t\t  \r\n\t\t  var output = sliderObj.outcome[indexLower] + fraction*(sliderObj.outcome[indexUpper] - sliderObj.outcome[indexLower])\r\n\t\t  \r\n\t\t  return output\r\n\t\t  \r\n\t\t  \r\n\t\t}\r\n\t\t\r\n\t\tthis.isMouseDragging = false\r\n\t\tthis.isCameraPosMoving = false\r\n\t\tthis.isCameraRotMoving = false\r\n\t\t\r\n\t\tconst isDragging = () => {\r\n\t\t\tthis.isMouseDragging = true\r\n\t\t}\r\n\t\tconst stopDragCheck = () => {\r\n\t\t\tthis.canvas.removeEventListener( 'mousemove', isDragging, false );\r\n\t\t\tthis.canvas.removeEventListener( 'mouseup', stopDragCheck, false );\t\r\n\t\t\t\r\n\t\t}\r\n\t\tconst checkForDrag = () => {\r\n\t\t\tthis.isMouseDragging = false\r\n\t\t\tthis.canvas.addEventListener( 'mousemove', isDragging, false );\r\n\t\t\tthis.canvas.addEventListener( 'mouseup', stopDragCheck, false );\t\r\n\t\t}\r\n\t\t\r\n\t\tconst stopWheelZoom = (e) => {\r\n\t\t\te.preventDefault()\r\n\t\t}\r\n\t\t\r\n\t\tconst moveToDoor = (event) => {\r\n\t\t\t\r\n\t\t\tvar mouse = new THREE.Vector2();\r\n\t\t\tmouse.x = ( event.clientX / window.innerWidth ) * 2 - 1;\r\n\t\t\tmouse.y = - ( event.clientY / window.innerHeight ) * 2 + 1;\t\t\t\r\n\t\t\tvar raycaster = new THREE.Raycaster();\r\n\t\t\traycaster.setFromCamera( mouse, camera );\r\n\t\t\tvar intersects = raycaster.intersectObjects( this.doorsAndOutlineArray, true )\r\n\t\t\t\r\n\t\t\tif (intersects.length > 0) {\r\n\t\t\t\tvar door_id = intersects[0].object.door_id\r\n\t\t\t\r\n\t\t\t\tvar target_pos = new THREE.Vector3(this.doorPositions[door_id][0], this.doorPositions[door_id][1], 4.5);\r\n\t\t\t\tvar target_controls = new THREE.Vector3(this.doorPositions[door_id][0], this.doorPositions[door_id][1], 0);\r\n\t\t\t\t\r\n\t\t\t\tif (!this.isCameraPosMoving) {\r\n\t\t\t\t\tcontrols.enabled = false;\r\n\t\t\t\t\tthis.isCameraPosMoving = true\r\n\t\t\t\t\tthis.canvas.addEventListener( 'wheel', stopWheelZoom, false );\r\n\t\t\t\t\tnew TWEEN.Tween( camera.position )\r\n\t\t\t\t\t\t.to({ x: target_pos.x, y: target_pos.y, z: target_pos.z }, 1000)\r\n\t\t\t\t\t\t.easing(TWEEN.Easing.Quadratic.In)\r\n\t\t\t\t\t\t.onUpdate(() => {\r\n\t\t\t\t\t\t\tcontrols.update()\r\n\t\t\t\t\t\t })\r\n\t\t\t\t\t\t.onComplete(() => {\r\n\t\t\t\t\t\t\tcontrols.enabled = true;\r\n\t\t\t\t\t\t\tcontrols.update()\r\n\t\t\t\t\t\t\tthis.isCameraPosMoving = false\r\n\t\t\t\t\t\t\tthis.canvas.removeEventListener( 'wheel', stopWheelZoom, false );\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.start()\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (!this.isCameraRotMoving) {\r\n\t\t\t\t\tcontrols.enabled = false;\r\n\t\t\t\t\tthis.isCameraRotMoving = true\r\n\t\t\t\t\tthis.canvas.addEventListener( 'wheel', stopWheelZoom, false );\r\n\t\t\t\t\tnew TWEEN.Tween( controls.target )\r\n\t\t\t\t\t\t.to({ x: target_controls.x, y: target_controls.y, z: target_controls.z }, 1000)\r\n\t\t\t\t\t\t.easing(TWEEN.Easing.Quadratic.In)\r\n\t\t\t\t\t\t.onUpdate(() => {\r\n\t\t\t\t\t\t\tcontrols.update()\r\n\t\t\t\t\t\t })\r\n\t\t\t\t\t\t.onComplete(() => {\r\n\t\t\t\t\t\t\tcontrols.enabled = true;\r\n\t\t\t\t\t\t\tcontrols.update()\r\n\t\t\t\t\t\t\tthis.isCameraRotMoving = false\r\n\t\t\t\t\t\t\tthis.canvas.removeEventListener( 'wheel', stopWheelZoom, false );\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.start()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\t\r\n\t\tconst onClick = (e) => {\r\n\t\t\tif (camera.position.z <5 || this.isMouseDragging) {return}\r\n\t\t\tmoveToDoor(e)\r\n\t\t}\r\n\t\t\r\n\t\tconst onDblClick = (e) => {\r\n\t\t\te.preventDefault()\r\n\t\t\tif (camera.position.z >= 5 || this.isMouseDragging) {return}\r\n\t\t\tmoveToDoor(e)\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\tthis.canvas.addEventListener( 'click', onClick, false)\r\n\t\tthis.canvas.addEventListener( 'dblclick', onDblClick, false)\r\n\t\tthis.canvas.addEventListener( 'mousedown', checkForDrag, false );\t\r\n\t\tthis.canvas.addEventListener( 'mousedown', checkMouseIntersection, false );\r\n\t\tthis.canvas.addEventListener( 'mouseup', () => {controls.enableRotate = true}, false);\r\n\t\tthis.canvas.addEventListener( 'touchstart', checkMouseIntersection, false );\r\n\t\tthis.canvas.addEventListener( 'touchend', () => {controls.enableRotate = true}, false );\r\n\t\t\r\n\t\t// this.canvas.addEventListener( 'touchstart', (event) => {console.log([event.touches[0].clientX, event.touches[0].clientY]) })\r\n\t\t// this.canvas.addEventListener( 'mousedown', (event) => {console.log([event.clientX, event.clientY]) })\r\n\t\r\n\r\n\t\tconst animate = (timeStamp) => {\r\n\t\t\tif (this.props.play) {\r\n\t\t\t\trequestAnimationFrame( this.animate );\r\n\t\t\t}\r\n\r\n\t\t\t// line.rotation.x += 0.01;\r\n\t\t\t// line.rotation.y += 0.01;\r\n\t\t\t\r\n\t\t\tcontrols.update();\r\n\t\t\t\r\n\t\t\t// console.log(camera.position)\r\n\t\t\t\r\n\t\t\tupdateSnowEffectParticles(snowEffectParticles, timeStamp)\r\n\t\t\t\r\n\t\t\t// checkMouseIntersection()\r\n\r\n\t\t\tTWEEN.update();\r\n\t\t\trenderer.render( scene, camera );\r\n\t\t};\r\n\t\t\r\n\t\tthis.scene = scene\r\n\t\t\r\n\t\tthis.animate = animate\r\n\t\t\r\n\t\t\r\n\t\t// requestAnimationFrame(this.animate);\r\n\t\t\r\n\t\tthis.setState({update: !this.state.update})\r\n\r\n\t}\r\n\t\r\n\t// requestAnimationFrame = () => {\r\n\t\t// if (this.animate) {\r\n\t\t\t// requestAnimationFrame(this.animate);\r\n\t\t// }\r\n\t// }\r\n\t\r\n\trender() {\r\n\t\t\r\n\t\tif (this.props.play) {\r\n\t\t\tif (this.animate) {\r\n\t\t\t\trequestAnimationFrame( this.animate );\r\n\t\t\t}\r\n\t\t} \r\n\t\t\r\n\t\treturn(\r\n\t\t\t<canvas id='c' ref={ref => (this.canvas = ref)}/>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Calendar3D;","export default __webpack_public_path__ + \"static/media/modal_decor.bb3945ee.png\";","import React from 'react';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nimport decor from \"../images/modal_decor.png\"\r\n\r\nclass SettingsModal extends React.Component {\r\n\tconstructor(props) {\r\n\t  super(props);\r\n\t  // Don't call this.setState() here!\r\n\t  this.state = { show: false };\r\n\t}\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Button variant=\"primary\" onClick={() => {this.setState({show: true}); this.props.pauseAnimation()}} style={this.props.buttonStyle}>\r\n\t\t\t\t\tCustom Width Modal\r\n\t\t\t\t</Button>\r\n\t\t\t\t\r\n\t\t\t\t<Modal\r\n\t\t\t\t\tshow={this.state.show}\r\n\t\t\t\t\tonHide={() => {this.setState({show: false}); this.props.playAnimation()}}\r\n\t\t\t\t\tdialogClassName=\"modal-90w\"\r\n\t\t\t\t\taria-labelledby=\"example-custom-modal-styling-title\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<img src={decor} style={{width: '100%'}} alt=\"\"/>\r\n\t\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t\t<Modal.Title id=\"example-custom-modal-styling-title\">\r\n\t\t\t\t\t\t\tCustom Modal Styling\r\n\t\t\t\t\t\t</Modal.Title>\r\n\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\tIpsum molestiae natus adipisci modi eligendi? Debitis amet quae unde\r\n\t\t\t\t\t\t\tcommodi aspernatur enim, consectetur. Cumque deleniti temporibus\r\n\t\t\t\t\t\t\tipsam atque a dolores quisquam quisquam adipisci possimus\r\n\t\t\t\t\t\t\tlaboriosam. Quibusdam facilis doloribus debitis! Sit quasi quod\r\n\t\t\t\t\t\t\taccusamus eos quod. Ab quos consequuntur eaque quo rem! Mollitia\r\n\t\t\t\t\t\t\treiciendis porro quo magni incidunt dolore amet atque facilis ipsum\r\n\t\t\t\t\t\t\tdeleniti rem!\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t</Modal>\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t</>\r\n\t\t\t)\r\n\t}\r\n}\r\n\r\nexport default SettingsModal","\nimport wreath from \"./images/wreath.png\"\nimport React from 'react';\n\nimport Calendar3D from './components/Calendar3D'\nimport SettingsModal from './components/SettingsModal'\nimport ReactBootstrapSlider from 'react-bootstrap-slider';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"bootstrap-slider/dist/css/bootstrap-slider.css\"\nimport './styling.css'\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t// Don't call this.setState() here!\n\t\tthis.state = { playAnimation: true}\n\n\t}\n\t\n\tpauseAnimation = () => {\n\t\tthis.setState({playAnimation: false})\n\t}\n\t\n\tplayAnimation = () => {\n\t\tthis.setState({playAnimation: true})\n\t}\n  \n  \n  render() {\n\t  return (\n\t\t<div className=\"app-container\">\n\t\t\n\t\t  <Calendar3D \n\t\t\tplay={this.state.playAnimation}\n\t\t  />\n\t\t  \n\t\t  <div className=\"wreath-border left\">\n\t\t\t<img src={wreath} alt=\"\" />\n\t\t  </div>\n\t\t  <div className=\"wreath-border right\">\n\t\t\t<img src={wreath} alt=\"\" />\n\t\t  </div>\n\t\t  \n\t\t  <SettingsModal buttonStyle={{position: 'absolute', top: '50%'}} pauseAnimation={this.pauseAnimation} playAnimation={this.playAnimation} />\n\n\t\t</div>\n\t  )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}